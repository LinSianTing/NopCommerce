@using Nop.Core.Configuration
@using Nop.Core.Domain.Catalog
@using Nop.Core.Domain.Common
@using Nop.Core.Domain.Seo
@using Nop.Services.Security
@using Nop.Core.Events

@inject CatalogSettings catalogSettings
@inject CommonSettings commonSettings
@inject IEventPublisher eventPublisher
@inject IPermissionService permissionService
@inject SeoSettings seoSettings
@inject AppSettings appSettings

@{
    if (catalogSettings.DisplayAllPicturesOnCatalogPages)
    {
        NopHtml.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/swiper/swiper-bundle.min.js");
    }
    NopHtml.AppendScriptParts(ResourceLocation.Footer, "~/js/public.countryselect.js");
    NopHtml.AppendScriptParts(ResourceLocation.Footer, "~/js/public.ajaxcart.js");
    NopHtml.AppendScriptParts(ResourceLocation.Footer, "~/js/public.common.js");
    //when jQuery migrate script logging is active you will see the log in the browser console
    if (commonSettings.JqueryMigrateScriptLoggingActive)
    {
        NopHtml.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-migrate/jquery-migrate.js");
    }
    else
    {
        NopHtml.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-migrate/jquery-migrate.min.js");
    }
    NopHtml.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-ui-dist/jquery-ui.min.js");
    NopHtml.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js");
    NopHtml.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-validation/jquery.validate.min.js");
    NopHtml.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery/jquery.min.js");

    //custom tag(s);
    if (!string.IsNullOrEmpty(seoSettings.CustomHeadTags))
    {
        NopHtml.AppendHeadCustomParts(seoSettings.CustomHeadTags);
    }

    //event
    await eventPublisher.PublishAsync(new PageRenderingEvent(NopHtml));

    var title = await NopHtml.GenerateTitleAsync();
    var description = await @NopHtml.GenerateMetaDescriptionAsync();
    var keywords = await NopHtml.GenerateMetaKeywordsAsync();
}
<!DOCTYPE html>
<html lang="@CultureInfo.CurrentUICulture.TwoLetterISOLanguageName" dir="@Html.GetUIDirection(!await Html.ShouldUseRtlThemeAsync())" class="@NopHtml.GeneratePageCssClasses()">
<head>
	<meta charset="utf-8">
	<meta http-equiv="x-ua-compatible" content="ie=edge">
	<title> TheLoke - Multipurpose eCommerce HTML Template </title>
	<meta name="robots" content="noindex, follow" />
	<meta name="description" content="TheLoke is a Multipurpose eCommerce HTML Template. The Template has 7 demos for various category of business like Electronics, Fashion, Furniture, Handmade, etc. It comes with a variety of customisation options which you can use to build a unique website.">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<rel ="profile" href="https://gmpg.org/xfn/11">
		<rel ="canonical" href="https://htmldemo.hasthemes.com/theloke/index.html" />

		<!-- Open Graph (OG) meta tags are snippets of code that control how URLs are displayed when shared on social media  -->
		<meta property="og:locale" content="en_US" />
		<meta property="og:type" content="website" />
		<meta property="og:title" content="TheLoke - Multipurpose eCommerce HTML Template" />
		<meta property="og:url" content="https://htmldemo.hasthemes.com/theloke/index.html" />
		<meta property="og:site_name" content="TheLoke - Multipurpose eCommerce HTML Template" />
		<!-- For the og:image content, replace the # with a of an image -->
		<meta property="og:image" content="#" />
		<meta property="og:description" content="TheLoke is a Multipurpose eCommerce HTML Template. The Template has 7 demos for various category of business like Electronics, Fashion, Furniture, Handmade, etc. It comes with a variety of customisation options which you can use to build a unique website." />
		<!-- Add site Favicon -->
		<rel ="icon" href="~/images/favicon/cropped-favicon-32x32.png" sizes="32x32" />
		<rel ="icon" href="~/images/favicon/cropped-favicon-192x192.png" sizes="192x192" />
		<rel ="apple-touch-icon" href="~/images/favicon/cropped-favicon-180x180.png" />
		<meta name="msapplication-TileImage" content="~/images/favicon/cropped-favicon-270x270.png" />

		<!-- All CSS is here
		============================================ -->

		<rel ="stylesheet" href="~/css/vendor/bootstrap.min.css">
		<rel ="stylesheet" href="~/css/vendor/line-awesome.min.css">
		<rel ="stylesheet" href="~/css/vendor/elegant.css">
		<rel ="stylesheet" href="~/css/vendor/linear-icon.css">
		<rel ="stylesheet" href="~/css/vendor/simple-line-icons.css">
		<rel ="stylesheet" href="~/css/plugins/slick.css">
		<rel ="stylesheet" href="~/css/plugins/easyzoom.css">
		<rel ="stylesheet" href="~/css/plugins/magnific-popup.css">
		<rel ="stylesheet" href="~/css/plugins/select2.min.css">
		<rel ="stylesheet" href="~/css/plugins/animate.css">
		<rel ="stylesheet" href="~/css/plugins/aos.css">
		<rel ="stylesheet" href="~/css/plugins/jquery-ui.css">
		<rel ="stylesheet" href="~/css/style.css">
    <title>@title</title>
    <meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
    <meta name="description" content="@description" />
    <meta name="keywords" content="@keywords" />
    <meta name="generator" content="nopCommerce" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    @NopHtml.GenerateHeadCustom()
    @*This is used so that themes can inject content into the header*@
    @await Html.PartialAsync("Head")

    @NopHtml.GenerateCssFiles()

    @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.HeadHtmlTag })
    @NopHtml.GenerateCanonicalUrls()
    @await Component.InvokeAsync(typeof(NewsRssHeaderLinkViewComponent))
    @await Component.InvokeAsync(typeof(BlogRssHeaderLinkViewComponent))
    @*Insert favicon and app icons head code*@
    @await Component.InvokeAsync(typeof(FaviconViewComponent))
    @NopHtml.GenerateScripts(ResourceLocation.Head)
    @NopHtml.GenerateInlineScripts(ResourceLocation.Head)
    <!--Powered by nopCommerce - https://www.nopCommerce.com-->
    
    @Html.Raw(commonSettings.HeaderCustomHtml)
</head>
<body>
    <nop-antiforgery-token />
    @RenderBody()

    @NopHtml.GenerateScripts(ResourceLocation.Footer)
    @NopHtml.GenerateInlineScripts(ResourceLocation.Footer)
    
    @Html.Raw(commonSettings.FooterCustomHtml)
</body>
</html>
